---
layout: post
title:  "Answers to the questions"
date:   2019-03-20 09:10:08 +0100
---

# What do I think of pre-compiling your CSS?

At the start of this assignment I didn't have a clue what to do. I didn't know what anything meant, what it was supposed to or how I was going to use it. I turned to jekyllrb.com and after lots and lots of reading (on this and other pages), and at the same time trying to make changes in this assignment, I finally started to grasp how it works. But I can't say I like this way of working.

- Compare to regular CSS

Compared to regular I thought it was way harder to understand. I needed more files than I would've needed with regular CSS, which I felt just makes it messy (in my head). Maybe this is because I was confused as to how it actually works, but for a small project like this I don't think it's necessary to use pre-compiling.

- Which techniques did I use?

The techniques I used was simply to copy the files from vendor and paste it in my source catalog and name them the same thing as in vendor (because that is what was said on how we should do it). I created a main.css file that I used variables to set the basics like font, font-size and colors for font and background. I also created MediaQuery to get a responsive design for smaller devices.

- Pros and cons?

Just because I feel like it's messy having this many different files doesn't mean that it actually is. I guess that if you know what you're doing, one of the pros of pre-compiling CSS is that it actually is this many files. You don't overcrowd one file with lines after lines of CSS, so it might be easier to keep track of where everything is. But for a smaller project like this, I think it's a bit overkill.
One of the cons is that if you are more than one person working on a project that's using pre-compiling, everyone has to know how to do it. If someone who's not familiar with it start changing things it can mess up everything.

# What do I think of static site generators?
- What type of projects are they suitable for?

When files are static is means that they are delivered to the client exactly as stored (compared to dynamic web pages that are generated by a web application). Their content is fixed and is the exact same for every user. 
The static site generators can pack the files together and send to the client, which means fewer requests from the client to the server. They load quickly on the client and that's a good thing. I guess static site generators are more suitable for basic, simple websites.

# What is robots.txt and how have I configured it for my site?
There are programs called Web Robots whose purpose is to traverse the web automatically. The robots.txt is the file they go to to see what files they can access. In this file we can control what we want to deny access to and not.

For my site I have chosen to deny access all together by implementing the following to my robots.tx:

{% highlight ruby %} User-agent: * 
 Disallow: /{% endhighlight %}

User-agent: * means that this applies to all robots.

Disallow: / means that it should not visit any pages on the site.

# What is humans.txt and how have I configured it for my site?
humans.txt is a text file that allows people to see who is behind the website. It contains information about the people who contributed to building the site. It can contain this information, special thanks, software that was used and so on. This is how I have configured it for my website:
{% highlight ruby %} /* TEAM */ 
Title: Sanna Gustafsson 
Site: sg222ws@student.lnu.se 
Location: Stockholm, Sweden {% endhighlight %}

{% highlight ruby %}/* SITE */
Last updated: 2019/03/21
Standards: HTML5, CSS
Components: Jekyll, Sass
Software: Visual Studio Code{% endhighlight %}
# How did I implement comments to the blog posts?
As recommended I chose to use Disqus to implement comments on blog posts. It was very easy to register at Disqus and afterwards they take you through every step of implementing it on your web site, by providing all the code necessary and where to implement it.
You can find the implemented code for Disqus in the bottom of my file post.html, and in the bottom of the file default.html.

# What is Open Graph and how do you make use of it?
Open Graph means that if you want to send or post this website somewhere on social medias, it will not only show the link to the site but information of my choosing. This information can include a small picture, a title and a description of the site. Way nicer and more appealing than just a link and will hopefully result in more visitors on the site. 
To implement it you put the information you want to show inbetween meta tags in you head.html. 